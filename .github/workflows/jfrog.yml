# This workflow will build and publish a new Docker image to JFrog Container Registry

name: Build and publish to JFrog

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JF_URL: ${{ vars.JF_URL }}
  JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
  JFROG_CLI_AVOID_NEW_VERSION_WARNING:  ${{ vars.JFROG_CLI_AVOID_NEW_VERSION_WARNING }}
  IMAGE_NAME: petclinictest.jfrog.io/petclinic-docker/petclinic-docker-image:${{ github.run_number }}

jobs:
  build_and_publish_container:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]
       
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v3


      - name: Test connection
        run: |
          echo "$JF_URL"
          echo "$JFROG_CLI_AVOID_NEW_VERSION_WARNING"
          jf rt ping

      - name: Build tag and Push Docker Image
        run: |
          jf docker build -t $IMAGE_NAME .
          jf docker push $IMAGE_NAME

      - name: Scan local Docker image with XRay
        run: |
          jf docker scan --format=json $IMAGE_NAME >> {{ github.workspace }}/scan_results.json

      - name: Upload JSON scan results as workflow artifact
        uses: actions/upload-artifact@v2
        with:
          name: scan_results
          path: {{ github.workspace }}/scan_results.json
          if-no-files-found: error
          
      - name: Publish Build info With JFrog CLI
        env:
          # Generated and maintained by GitHub
          JFROG_CLI_BUILD_NAME: jfrog-docker-build-example
          # JFrog organization secret
          JFROG_CLI_BUILD_NUMBER : ${{ github.run_number }}
        run: |
          # Export the build name and build nuber
          # Collect environment variables for the build
          jf rt build-collect-env
          # Collect VCS details from git and add them to the build
          jf rt build-add-git
          # Publish build info
          jf rt build-publish