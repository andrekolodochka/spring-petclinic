# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

#    outputs:
#      artifact_name: ${{ steps.artifact_parameters.outputs.artifact_name }}
#      artifact_path: ${{ steps.artifact_parameters.outputs.artifact_path }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      
      - name: Build with Maven Wrapper
        run: ./mvnw -B package
      
#      - name: Set artifact parameters
#        id: artifact_parameters
#        uses: actions/github-script@v6
#        with:
#          script: |
#            core.setOutput('artifact_name', `application-jar`);
#            core.setOutput('artifact_path', `target`);

      - name: Upload application jar artifact
        uses: actions/upload-artifact@v3
        with:
          name: "spring-petclinic-3.1.0-SNAPSHOT.jar.original"
          path: "/home/runner/work/spring-petclinic/spring-petclinic/target"
          if-no-files-found: error

# build_publish_container:
#    name: Container Build and Publish

#    runs-on: ubuntu-latest

#    needs:
#      - build_and_test
    
#    outputs:
#      container_image: ${{ steps.container_parameters.outputs.container_name }}
    
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3

#      - name: Build a container
#        run: ./mvnw spring-boot:build-image
